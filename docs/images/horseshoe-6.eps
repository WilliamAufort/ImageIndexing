%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (/srv/www/vhosts/releases/5/save/queued/5/2/2/5220d397466b34a973b36747e657d997/intermediate1/o_c80a4151177dd757.eps)
%%CreationDate: (2015-05-01T17:41:37+02:00)
%%BoundingBox: -0 -0 114 106
%%HiResBoundingBox: 0 0 114 106
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 114 106
userdict begin
DisplayImage
0 0
114 106
12
114 106
1
1
1
1
000000000000000000000000000000000000000000FFFF8000000000000000000000003FFFFFFE
0000000000000000000007FFFFFFFFC00000000000000000001FFFFFFFFFF80000000000000000
00FFFFFFFFFFFF000000000000000003FFFFFFFFFFFFC00000000000000007FF87FFFFFFFFF000
0000000000001FFFFFFFFFFFFFFC000000000000007FFFFFFFFFFFFFFF00000000000000FFFFFF
FFFFFFFFFF80000000000003FFFFFFFFFEFFFFFFC0000000000003FFFFFFFFFFFFFFFFF0000000
00000FFFFFFFFFFFFFFFFFF800000000003FFFFFFFE3FFFFFFFFFE00000000003FFFFFFFFFFFFF
F80FFE0000000000FFFFFFFFFFFFFFEFFFFF8000000000FFFFCFFFFFFFFFFFFFFF8000000001FF
FFFFFFFFFFF1FFFFFFC000000003FFFFFE03FFFFFFFFFFFFE000000007FFFFFFFFFFFFFFFFFFFF
F00000000FFFFFFFFFFFFFFFFFFFFFF80000000FFFFFFFFFFFFFFFFFFFFFFC0000001FFFFFFFFF
FFFFFFFFFFFFFC0000003FFFFFFFFE1E7FFFFFFFFFFE0000007FFFFFFFFFFFFFFFFFFFFDFF0000
007FFFFFFFFFFFFBFFF0FFFFFF800000FFFFFFFFFFFFFFFFFFFFFFFF800000FFFFFFFFFFFFFFFF
FFFFFFFF800001FFFFFFFFFFFFFFFFFFFFFFFFC00001FFFFFFFFFFFFFFFFFFFFFFFFE00003FFFF
FFFFFFFFFFFFFFFFFFFFE00003FFFFFFFFFFFFFFFFFFFFFFFFF00007FFFFFFFFFFFFFFFFFFFE7F
FFF80007FFFFFFFFFFF803FFFFFFFFFFF80007FFFFFFFFFF80001FFFFFFFFFF8000FFFFFFFFFFE
000007FFDFFFFFFC000FFFFFFFFFF8000003FFFFFFFFFC000FFFFFFFFFE0000000FFFFF7FFFE00
1FFFFFFFFFC00000007FBFFFFFFE001FFFFFFFFF800000001FFFFFFFFE001FFFFFFFFE00000000
1FCFFFFFFF003FFFFFFFFC000000000FFFFFFFFF003FFFFFFFFC000000000FFFFFFFFF003FFFFF
FFF80000000003FFFFFFFF003FFFFFFFF00000000003FFFFFF7F003FFFFFFFF00000000001F7FF
FFFF003FFFFFFFE00000000001FFFFFFFF803FFFF3FFE00000000001FFFFFFFF807FFFFFFFC000
00000000FFFFFFFF807FFFFFFFC00000000000FFFFFFFF807FFFFFFFC0000000000078FFFFFF80
7FFFFFFF8000000000007FFFFFFF807FFFFFFF8000000000007FFFFFFF807FFFFFFF8000000000
007FFFFFFF807FFFFFFF8000000000003FFFFFFF807FFFFFFF8000000000003EFFFFFF807FFFFF
FF8000000000003FFFFFFF807FFFFFFF8000000000003FFFFFFF807FFFFFFF8000000000003FFF
FFFF807FFFFFFF0000000000003FFFFFFF807FFFFFFF0000000000003FFFFFFF803FFFFFFF0000
000000003FFFFFFF803FFFFFFF0000000000003FFFFF7F803FFFFFFF0000000000003FFFFF7F80
3FFFFFFF0000000000001FFFFF7F803FFFFFFF0000000000003E03FF7F803FFFFFFF0000000000
003FFFFF7F003FFFFFFF0000000000003FFFFFFF003FFFFFFF0000000000003FFFFFFF003FFFFF
FF0000000000003FFFFFFF003FFFFFFF0000000000003E3FFFFE001FFFFFFF0000000000003FFF
FFFE001FFFFFFF8000000000003FFFFFFE001FFFFFFF8000000000003FFFFFFE001FFFFFFF8000
000000007FFFFFFE001FFFFFFF8000000000007FFFFFFE000FFFFFFFC000000000007FFFFFFE00
0FFFFFFFC000000000007FFFFFFC000FFFFFFFC000000000007FFFFFFC0007FFFFFFC000000000
00FFFFFFFC0007FFFFFFE00000000000FF3FFFF80007FFFFFFE00000000000FFFFFFF80003FFFF
FFE00000000000FFFFFFF80003E3FFFFE00000000001F7FFFFF80003FFFFFFE00000000001FFFF
FFF80001FFFFFFF00000000001FFFFFFF00001FFFFFFF00000000001FFFFFFF00001FFFFFFF000
00000001FFFFFFF00000FFFFFFF80000000003FDFFFFE00000FFFFFFF80000000003FFFFFFE000
007FFFFFFC0000000003FFFFFFC000007FFFFFFC0000000003FFFFFFC000003FFFFFFC00000000
07FFFFFFC000003FEFFFFE0000000007FFFFFFC000003FFFFFFE0000000007FFFFFFC000001FFF
FEFF000000000FFFFF7F0000001FFFFFFF000000000FFFFFFF0000000FFFFFFF800000000FFFFF
FF0000000FFFFFFF800000001FFFFFFE00000007FFFFFFC00000001FFFFFFE00000003FFFFFFC0
0000001FFFFFFE00000003FFFFFFC00000001FFFFFFE00000001FFFFFFC00000001FFFFFF80000
0001FFFFFFC00000000787800000000001FFF00000000000000000000000
end
%%PageTrailer
%%Trailer
%%EOF
